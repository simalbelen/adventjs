// Para mejorar la productividad de la tienda en la que trabajamos, vamos a crear una peque√±a m√°quina que calcula el m√≠nimo n√∫mero de monedas que debemos usar para dar el cambio de una compra en met√°lico.
// Tenemos que crear una funci√≥n que recibe el n√∫mero de c√©ntimos que hay que devolver al cliente y la funci√≥n nos da un array con la combinaci√≥n de monedas m√≠nimas que debemos usar para conseguirlo.
// La dificultad del reto est√° en saber utilizar correctamente una estructura que te permita conocer las monedas que tienes disponible para crear el array con la devoluci√≥n, ya que debes usar siempre el menor n√∫mero de monedas posible. ¬°Suerte üë©‚Äçüíªüë®‚Äçüíª!.

const coins = [1, 2, 5, 10, 20, 50] //centimos

function getCoins(change) {
    let res = [0, 0, 0, 0, 0, 0]
    for (let i = (coins.length - 1); i >= 0; i--) {
        if (change != 0){
            var cociente = Math.floor(change / coins[i]);
            change = change % coins[i];
            res[i] = cociente
        }
        
    }
    return res
  }

console.log(getCoins(51)) // [1, 0, 0, 0, 0, 1] -> una moneda de 1 c√©ntimo y otra de 50 c√©ntimos
console.log(getCoins(3)) // [1, 1, 0, 0, 0, 0] -> una moneda de 1 c√©ntimo y otra de 2
console.log(getCoins(5)) // [0, 0, 1, 0, 0, 0] -> una moneda de 5 c√©ntimos
console.log(getCoins(16)) // [1, 0, 1, 1, 0, 0] -> una moneda de 1 c√©ntimo, una de 5 y una de 10
console.log(getCoins(100)) // [0, 0, 0, 0, 0, 2] -> dos monedas de 50 c√©ntimos